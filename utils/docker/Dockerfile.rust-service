# Multi-stage build to compile a single workspace crate using rust-base

ARG CRATE

FROM rust-base AS base

FROM base AS builder
ARG BUILD_MODE=dev

# 1) Pre-install the pinned Rust toolchain as a separate cached layer
# Ensure toolchain is pinned via rust-toolchain.toml if present (rust:slim already has stable)
COPY rust-toolchain.toml ./

# 2) Prime dependency cache by copying only manifests
COPY Cargo.toml Cargo.lock ./
COPY command-dispatcher/Cargo.toml ./command-dispatcher/Cargo.toml
COPY telemetry-ingestor/Cargo.toml ./telemetry-ingestor/Cargo.toml
COPY hydra_manager_daemon/Cargo.toml ./hydra_manager_daemon/Cargo.toml
COPY utils/manual-command-dispatcher/Cargo.toml ./utils/manual-command-dispatcher/Cargo.toml

# 3) Create minimal dummy sources so Cargo can resolve and compile deps without real source
RUN mkdir -p \
    command-dispatcher/src \
    telemetry-ingestor/src \
    hydra_manager_daemon/src \
    utils/manual-command-dispatcher/src \
    && printf 'fn main(){}\n' | tee \
    command-dispatcher/src/main.rs \
    telemetry-ingestor/src/main.rs \
    hydra_manager_daemon/src/main.rs \
    utils/manual-command-dispatcher/src/main.rs >/dev/null

# 4) Build only dependencies (and tiny dummies) with lockfile for reproducibility
RUN if [ "$BUILD_MODE" = "prod" ]; then \
    cargo build --locked --release --workspace --bins; \
    else \
    cargo build --release --workspace --bins; \
    fi

# 5) Now copy the full workspace sources (invalidates only from here on code changes)
COPY . .

# 6) Build only the requested crate in release mode using cached deps
ARG CRATE
ENV CRATE=${CRATE}
RUN if [ "$BUILD_MODE" = "prod" ]; then \
    cargo build --locked --release -p ${CRATE}; \
    else \
    cargo build --release -p ${CRATE}; \
    fi

# 7) Export the requested binary
RUN mkdir -p /out && install -Dm755 /app/target/release/${CRATE} /out/${CRATE}

FROM debian:bookworm-slim AS runtime
ARG CRATE
ENV CRATE=${CRATE}

# Install only runtime dependencies (no build tools)
# RUN apt-get update \
#     && apt-get install -y --no-install-recommends \
#         ca-certificates \
#         && rm -rf /var/lib/apt/lists/*

WORKDIR /app/bin
COPY --from=builder /out/${CRATE} /app/bin/${CRATE}

